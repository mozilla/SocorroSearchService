<?xml version="1.0" encoding="UTF-8"?>
<hazelcast xmlns="http://www.hazelcast.com/schema/config" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.hazelcast.com/schema/config hazelcast-basic.xsd">
        <properties>
                 <property name="hazelcast.initial.min.cluster.size">1</property>
        </properties>

	<group>
		<name>bagheera</name>
		<password>test</password>
	</group>
	<network>
		<port auto-increment="true">5701</port>
		<join>
			<multicast enabled="true">
				<multicast-group>224.2.2.3</multicast-group>
				<multicast-port>54327</multicast-port>
			</multicast>
			<tcp-ip enabled="false">
				<interface>127.0.0.1</interface>
			</tcp-ip>
		</join>
		<interfaces enabled="false">
			<interface>*</interface>
		</interfaces>
	</network>
	<executor-service>
		<core-pool-size>16</core-pool-size>
		<max-pool-size>64</max-pool-size>
		<keep-alive-seconds>60</keep-alive-seconds>
	</executor-service>
	<map name="default">
		<time-to-live-seconds>5</time-to-live-seconds>
		<backup-count>1</backup-count>
		<eviction-policy>NONE</eviction-policy>
		<max-size>0</max-size>
		<eviction-percentage>25</eviction-percentage>
		<merge-policy>hz.ADD_NEW_ENTRY</merge-policy>
		<!-- NoOpMapStore -->
		<map-store enabled="true">
			<class-name>com.mozilla.bagheera.hazelcast.persistence.NoOpMapStore</class-name>
			<write-delay-seconds>5</write-delay-seconds>
		</map-store>
	</map>
	<map name="telemetry">
		<time-to-live-seconds>20</time-to-live-seconds>
		<backup-count>1</backup-count>
		<eviction-policy>NONE</eviction-policy>
		<max-size>0</max-size>
		<eviction-percentage>25</eviction-percentage>
		<merge-policy>hz.ADD_NEW_ENTRY</merge-policy>
		<!-- HBaseMapStore -->
		<map-store enabled="true">
			<class-name>com.mozilla.bagheera.hazelcast.persistence.HBaseMapStore</class-name>
			<write-delay-seconds>5</write-delay-seconds>
			<property name="hazelcast.hbase.pool.size">20</property>
			<property name="hazelcast.hbase.table">telemetry</property>
			<property name="hazelcast.hbase.column.family">data</property>
			<property name="hazelcast.hbase.column.qualifier">json</property>
		</map-store>
	</map>
	<map name="testpilot">
		<time-to-live-seconds>20</time-to-live-seconds>
		<backup-count>1</backup-count>
		<eviction-policy>NONE</eviction-policy>
		<max-size>0</max-size>
		<eviction-percentage>25</eviction-percentage>
		<merge-policy>hz.ADD_NEW_ENTRY</merge-policy>
		<!-- HdfsMapStore -->
		<map-store enabled="true">
			<class-name>com.mozilla.bagheera.hazelcast.persistence.HdfsMapStore</class-name>
			<write-delay-seconds>5</write-delay-seconds>
			<property name="hazelcast.hdfs.basedir">/bagheera</property>
			<property name="hazelcast.hdfs.dateformat">yyyy-MM-dd</property>
			<property name="hazelcast.hdfs.max.filesize">1073741824</property>
		</map-store>
	</map>
	
		<map name="tasks">
		<time-to-live-seconds>30</time-to-live-seconds>
		<backup-count>1</backup-count>
		<eviction-policy>NONE</eviction-policy>
		<max-size>10000000</max-size>
		<eviction-percentage>25</eviction-percentage>
		<merge-policy>hz.ADD_NEW_ENTRY</merge-policy>
		<!-- HdfsMapStore -->
		<map-store enabled="true">
			<class-name>com.mozilla.bagheera.hazelcast.persistence.ElasticSearchIndexMapStore</class-name>
			<write-delay-seconds>5</write-delay-seconds>
			<property name="hazelcast.elasticsearch.index">socorro</property>
			<property name="hazelcast.elasticsearch.type.name">crash_reports</property>
			<property name="hazelcast.hbase.pool.size">20</property>
			<property name="hazelcast.hbase.table">crash_reports</property>
			<property name="hazelcast.hbase.column.family">processed_data</property>
			<property name="hazelcast.hbase.column.qualifier">json</property>
		</map-store>
	</map>
	

    <queue name="random">
        <!--
            Maximum size of the queue. When a JVM's local queue size reaches the maximum,
            all put/offer operations will get blocked until the queue size
            of the JVM goes down below the maximum.
            Any integer between 0 and Integer.MAX_VALUE. 0 means
            Integer.MAX_VALUE. Default is 0.
        -->
        <max-size-per-jvm>10000</max-size-per-jvm>
        <backing-map-ref>socorrosearchback</backing-map-ref>
        
        <!--
            Maximum number of seconds for each item to stay in the queue. Items that are
            not consumed in <time-to-live-seconds> will automatically
            get evicted from the queue.
            Any integer between 0 and Integer.MAX_VALUE. 0 means
            infinite. Default is 0.
        -->
        <time-to-live-seconds>0</time-to-live-seconds>
        
    </queue>
		
</hazelcast>
